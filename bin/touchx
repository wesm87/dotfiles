#!/usr/bin/env python3

"""touchx

Usage:
  touchx [<file_path>...] [--type=<file_type>]

Options:
  -h --help           Show this screen.
  --type=<file_type>  The file type you want to create (bash, python, ruby, node) [default: bash]

"""

from sys import stdin
from os import path, chmod
from docopt import docopt

CHMOD_755 = 0o755
SHEBANG_PREFIX = '#!/usr/bin/env'

BASH_HEADER_LINES = [
    '# shellcheck shell=bash',
    'set -euo pipefail',
    "IFS=$'\\n\\t'",
]

RUBY_HEADER_LINES = [
    '# frozen_string_literal: true',
]


def join_with_newlines(lines: list[str]) -> str:
    return '\n'.join(lines)


def get_shebang_command(file_type: str) -> str:
    if file_type == 'python':
        return 'python3'

    return file_type


def get_shebang(file_type: str) -> str:
    return ' '.join([
        SHEBANG_PREFIX,
        get_shebang_command(file_type),
    ])


def get_extra_header_lines(file_type: str) -> str:
    if file_type == 'bash':
        return BASH_HEADER_LINES

    if file_type == 'ruby':
        return RUBY_HEADER_LINES

    return []


def get_file_header(file_type: str) -> str:
    return join_with_newlines([
        get_shebang(file_type),
        *get_extra_header_lines(file_type),
    ])


def get_file_contents(file_path: str) -> str:
    if not path.exists(file_path):
        return ''

    with open(file_path, 'r') as file_descriptor:
        file_contents = file_descriptor.read().strip()

    file_descriptor.close()

    return file_contents


def write_template_to_file(file_type: str, file_path: str) -> None:
    with open(file_path, 'w') as file_descriptor:
        file_header = '{}\n'.format(get_file_header(file_type))
        file_descriptor.write(file_header)

    file_descriptor.close()


def main(arguments: dict) -> None:
    file_type = arguments.get('--type')
    file_paths = arguments.get('<file_path>') or stdin

    for file_path_line in file_paths:
        file_path = file_path_line.strip()
        file_contents = get_file_contents(file_path)

        if not file_contents:
            write_template_to_file(file_type, file_path)

        chmod(file_path, CHMOD_755)


if __name__ == '__main__':
    arguments = docopt(__doc__)
    main(arguments)
